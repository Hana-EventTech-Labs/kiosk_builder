# .github/workflows/auto-release.yml
name: Auto Dual Exe Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      run: |
        git clone $env:GITHUB_SERVER_URL/$env:GITHUB_REPOSITORY.git .
        git checkout $env:GITHUB_REF_NAME
      shell: powershell
    
    - name: Setup Python
      run: |
        # Python이 이미 설치되어 있는지 확인
        python --version
        pip --version
        
        # 최신 pip으로 업그레이드
        python -m pip install --upgrade pip
      shell: powershell
    
    - name: Install dependencies
      run: |
        # 의존성 설치
        if (Test-Path "requirements.txt") {
          pip install -r requirements.txt
        }
        if (Test-Path "kiosk-builder-app/requirements.txt") {
          pip install -r kiosk-builder-app/requirements.txt
        }
      shell: powershell
    
    - name: Extract version from tag
      id: get_version
      run: |
        $tag = $env:GITHUB_REF_NAME
        $version = $tag -replace '^v', ''
        echo "version=$version" >> $env:GITHUB_OUTPUT
        echo "tag=$tag" >> $env:GITHUB_OUTPUT
        Write-Host "Version: $version"
      shell: powershell
    
    - name: Update version in code
      run: |
        python scripts/update_version.py ${{ steps.get_version.outputs.version }}
      shell: powershell
    
    - name: Build both executables
      run: |
        python scripts/build_all.py
      shell: powershell
    
    - name: Verify builds
      run: |
        if (!(Test-Path "dist/super-kiosk-builder.exe")) {
          Write-Error "super-kiosk-builder.exe not found"
          exit 1
        }
        if (!(Test-Path "dist/super-kiosk.exe")) {
          Write-Error "super-kiosk.exe not found"  
          exit 1
        }
        
        $builderSize = (Get-Item "dist/super-kiosk-builder.exe").Length
        $kioskSize = (Get-Item "dist/super-kiosk.exe").Length
        
        Write-Host "✅ Build verification successful:"
        Write-Host "📁 super-kiosk-builder.exe: $($builderSize.ToString('N0')) bytes"
        Write-Host "📁 super-kiosk.exe: $($kioskSize.ToString('N0')) bytes"
      shell: powershell
    
    - name: Create Release with GitHub CLI
      run: |
        # PowerShell 인코딩을 UTF-8로 설정
        [Console]::OutputEncoding = [Text.Encoding]::UTF8
        $OutputEncoding = [Text.Encoding]::UTF8
        
        $version = "${{ steps.get_version.outputs.version }}"
        $tag = "${{ steps.get_version.outputs.tag }}"
        $date = Get-Date -Format "yyyy-MM-dd"
        
        $releaseNotes = @"
        ## Super Kiosk v$version Release

        ### Included Files
        - **super-kiosk-builder.exe**: Kiosk Settings Editor (Admin)
        - **super-kiosk.exe**: Kiosk Runtime Program (User)

        ### Technical Information
        - **Build Date**: $date
        - **Version**: $version
        - **Python**: 3.11
        - **UI Framework**: PySide6

        ### Features
        - Auto Update System
        - Integrated UI Interface
        - Cross-platform Support
        - User Authentication
        "@
        
        # GitHub CLI로 릴리스 생성 (영문으로 변경)
        gh release create $tag dist/super-kiosk-builder.exe dist/super-kiosk.exe --title "Super Kiosk $tag" --notes "$releaseNotes"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      shell: powershell
    
    - name: Upload build artifacts (for debugging)
      run: |
        # 아티팩트 업로드는 수동으로 처리
        Write-Host "Build artifacts available in dist/ folder"
        Write-Host "Files created:"
        Get-ChildItem dist/ | ForEach-Object { Write-Host "- $($_.Name)" }
      shell: powershell