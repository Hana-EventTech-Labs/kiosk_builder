name: Auto Release - NSIS Installer

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
    - name: Use Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Checkout code
      run: |
        git clone $env:GITHUB_SERVER_URL/$env:GITHUB_REPOSITORY.git .
        git checkout $env:GITHUB_REF_NAME
      shell: powershell

    - name: Setup Python
      run: |
        python --version
        pip --version
        python -m pip install --upgrade pip
      shell: powershell

    - name: Install NSIS
      run: |
        Write-Host "Installing NSIS..."
        choco install nsis -y
        Write-Host "NSIS installation completed"
      shell: powershell

    - name: Install dependencies
      run: |
        if (Test-Path "requirements.txt") {
          pip install -r requirements.txt
        }
        if (Test-Path "kiosk-builder-app/requirements.txt") {
          pip install -r kiosk-builder-app/requirements.txt
        }
      shell: powershell

    - name: Extract version from tag
      id: get_version
      run: |
        $tag = $env:GITHUB_REF_NAME
        $version = $tag -replace '^v', ''
        echo "version=$version" >> $env:GITHUB_OUTPUT
        echo "tag=$tag" >> $env:GITHUB_OUTPUT
        Write-Host "Version: $version"
      shell: powershell

    - name: Update version in code
      run: |
        python scripts/update_version.py ${{ steps.get_version.outputs.version }}
      shell: powershell

    - name: Build NSIS installer
      run: |
        python scripts/build_all.py
      shell: powershell

    - name: Verify installer
      run: |
        if (!(Test-Path "dist/SuperKioskSetup.exe")) {
          Write-Error "SuperKioskSetup.exe not found"
          exit 1
        }

        $installerSize = (Get-Item "dist/SuperKioskSetup.exe").Length
        Write-Host "Installer created successfully:"
        Write-Host "SuperKioskSetup.exe: $($installerSize.ToString('N0')) bytes"
        
        # 디지털 서명 확인 (선택사항)
        try {
          $signature = Get-AuthenticodeSignature "dist/SuperKioskSetup.exe"
          Write-Host "Signature status: $($signature.Status)"
        } catch {
          Write-Host "No digital signature (expected)"
        }
      shell: powershell

    - name: Create Release with GitHub CLI
      run: |
        [Console]::OutputEncoding = [Text.Encoding]::UTF8
        $OutputEncoding = [Text.Encoding]::UTF8

        $version = "${{ steps.get_version.outputs.version }}"
        $tag = "${{ steps.get_version.outputs.tag }}"
        $date = Get-Date -Format "yyyy-MM-dd"

        $releaseNotes = @"
        ## Super Kiosk v$version - Professional Installer

        ### Professional Installation Experience
        - **One-click installer**: SuperKioskSetup.exe
        - **Automatic shortcuts**: Start menu and Desktop
        - **Clean uninstall**: Control Panel support
        - **DLL issues completely resolved**

        ### Installation Instructions
        1. **Download** SuperKioskSetup.exe
        2. **Run installer** (may show Windows Defender warning)
        3. **Follow installation wizard**
        4. **Launch from Start menu** or Desktop shortcut

        ### Features
        - Auto-update system built-in
        - Professional installation/uninstallation
        - Start menu integration
        - Desktop shortcut creation
        - Registry integration
        - Complete DLL dependency resolution

        ### Technical Information
        - **Build Date**: $date
        - **Version**: $version
        - **Python**: 3.12
        - **Installer**: NSIS
        - **Architecture**: x64
        - **OS Support**: Windows 10/11

        ### What's Included
        - Super Kiosk Builder (Settings Editor)
        - Super Kiosk Runtime (Kiosk Program)
        - All required DLL files
        - Python runtime environment
        - Auto-update capability

        ### Security Note
        This installer is not digitally signed. Windows Defender may show a warning.
        Click "More info" → "Run anyway" to proceed with installation.

        ### Changelog
        - Complete resolution of MEI/DLL issues
        - Professional installer experience
        - Improved user workflow
        - Enhanced stability and reliability

        ---
        **Download**: SuperKioskSetup.exe (Recommended)
        **Size**: Approximately 100-200 MB
        **Installation time**: 1-2 minutes
        "@

        gh release create $tag dist/SuperKioskSetup.exe --title "Super Kiosk $tag - Professional Installer" --notes "$releaseNotes"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      shell: powershell

    - name: Upload build artifacts
      run: |
        Write-Host "Professional installer build completed!"
        Write-Host ""
        Write-Host "Final deliverable:"
        Get-ChildItem dist/SuperKioskSetup.exe | ForEach-Object { 
            $size = "$($_.Length.ToString('N0')) bytes"
            Write-Host "  SuperKioskSetup.exe - $size"
        }
        
        Write-Host ""
        Write-Host "User experience:"
        Write-Host "  1. Download SuperKioskSetup.exe"
        Write-Host "  2. Run installer"
        Write-Host "  3. Launch from Start menu"
        Write-Host "  4. Professional experience with no DLL issues!"
        
        Write-Host ""
        Write-Host "Installation creates:"
        Write-Host "  - Start menu shortcut"
        Write-Host "  - Desktop shortcut"  
        Write-Host "  - Control Panel uninstall entry"
        Write-Host "  - Registry entries for proper integration"
      shell: powershell